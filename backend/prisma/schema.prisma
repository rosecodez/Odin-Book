generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model user {
    id                        Int                         @id @default(autoincrement())
    username                  String                      @unique
    password                  String?
    googleId                  String?
    profile_image             String                      @default("https://res.cloudinary.com/dbmnceulk/image/upload/v1726786843/MessagingApp/xwhnyzgqeliffxa9lsrm.png")
    bio                       String                      @default("Nothing about this user yet")
    created_at                DateTime                    @default(now())
    like                      like[]
    post                      post[]
    messages                  message[]
    comment                   comment[]
    conversation_participants conversation_participants[]
    // many to many relationship
    //  - each user can follow many other users
    //  - each user can be followed by many other users
    followedBy                user[]                      @relation("UserFollows")
    following                 user[]                      @relation("UserFollows")
}

model Session {
    id        String   @id @default(cuid())
    sid       String   @unique
    data      String
    expiresAt DateTime
}

model message {
    id              Int           @id @default(autoincrement())
    content         String
    created_at      DateTime      @default(now())
    conversation_id String
    sender_id       Int
    user            user?         @relation(fields: [userId], references: [id])
    userId          Int?
    conversation    conversation? @relation(fields: [conversationId], references: [id])
    conversationId  Int?
    image           String?
}

model conversation {
    id                        Int                         @id @default(autoincrement())
    created_at                DateTime
    conversation_participants conversation_participants[]
    messages                  message[]
}

model conversation_participants {
    id             Int           @id @default(autoincrement())
    user           user          @relation(fields: [userId], references: [id])
    userId         Int
    conversation   conversation? @relation(fields: [conversationId], references: [id])
    conversationId Int?
}

model comment {
    id         Int      @id @default(autoincrement())
    content    String
    created_at DateTime @default(now())
    user       user     @relation(fields: [userId], references: [id])
    post       post     @relation(fields: [postId], references: [id])
    userId     Int
    postId     Int
}

model post {
    id         Int       @id @default(autoincrement())
    content    String
    created_at DateTime  @default(now())
    user       user      @relation(fields: [userId], references: [id])
    userId     Int
    comment    comment[]
    like       like[]
    post_image String?
}

model like {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now())
    user       user     @relation(fields: [userId], references: [id])
    userId     Int
    post       post     @relation(fields: [postId], references: [id])
    postId     Int
}
